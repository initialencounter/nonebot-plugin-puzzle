name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: release ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   name: puzzle_game-x86_64-pc-windows-msvc.zip
          #   rustflags: -C target-feature=+crt-static

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: puzzle_game-x86_64-unknown-linux-gnu.tar.gz

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: puzzle_game-aarch64-unknown-linux-gnu.tar.gz

          # - target: aarch64-apple-darwin
          #   os: macOS-11
          #   name: puzzle_game-aarch64-apple-darwin.tar.gz

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      
      - name: Setup | Install cross [Linux]
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@cross

      - name: Build | Build [Cross]
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        env:
          PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
        run: |
          dpkg -L libx11-dev | grep x11.pc
          cd puzzle-game
          cross build --release --locked --target ${{ matrix.target }}

      - name: Build | Build [Cross]
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        env:
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig
        run: |
          dpkg -L libx11-dev | grep x11.pc
          cd puzzle-game
          cross build --release --locked --target ${{ matrix.target }}

      - name: Build | Build [Cargo]
        if: matrix.os == 'windows-latest'
        run: |
          cd puzzle-game
          cargo build --release --locked --target ${{ matrix.target }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd puzzle-game/target/${{ matrix.target }}/release
          7z a ../../../../${{ matrix.name }} puzzle-game.exe

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd puzzle-game/target/${{ matrix.target }}/release
          tar czvf ../../../../${{ matrix.name }} puzzle-game

      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

      - name: Create Release Draft and Upload Artifacts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.name }}